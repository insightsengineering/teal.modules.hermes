% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pca.R
\name{tm_g_pca}
\alias{tm_g_pca}
\alias{ui_g_pca}
\alias{srv_g_pca}
\alias{sample_tm_g_pca}
\title{Teal Module for PCA Analysis}
\usage{
tm_g_pca(label, mae_name, pre_output = NULL, post_output = NULL)

ui_g_pca(id, datasets, mae_name, pre_output, post_output)

srv_g_pca(input, output, session, datasets, mae_name)

sample_tm_g_pca()
}
\arguments{
\item{label}{(\code{string})\cr
menu item label of the module in the teal app.}

\item{mae_name}{(\code{string})\cr
name of the MAE data used in the teal module.}

\item{pre_output}{(\code{shiny.tag} or \code{NULL})\cr
placed before the output to put the output into context (for example a title).}

\item{post_output}{(\code{shiny.tag} or \code{NULL})\cr
placed after the output to put the output into context (for example the \code{\link[shiny:helpText]{shiny::helpText()}}
elements can be useful).}

\item{id}{(\code{string})\cr
the ID used to call the teal module's UI function.}

\item{datasets}{(\code{Datasets})\cr
teal specific argument which is automatically passed to the UI and server
functions, holding all the data sets provided in the app initialization.}

\item{input}{(\code{ReactiveValues})\cr the session's input object.}

\item{output}{(\code{shinyoutput})\cr the session's output object.}

\item{session}{(\code{ShinySession})\cr the session object.}
}
\value{
Shiny module to be used in the teal app.
}
\description{
This module provides an interactive principal components plot and an
interactive heatmap with correlation of principal components with sample
variables.
}
\section{Functions}{
\itemize{
\item \code{ui_g_pca}: sets up the user interface.

\item \code{srv_g_pca}: sets up the server with reactive graph.

\item \code{sample_tm_g_pca}: sample module function.
}}

\examples{
library(hermes)
mae <- hermes::multi_assay_experiment
mae_data <- dataset("MAE", mae)
data <- teal_data(mae_data)
app <- init(
  data = data,
  modules = root_modules(
    static = {
      tm_g_pca(
        label = "PCA plot",
        mae_name = "MAE"
      )
    }
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}
\dontrun{
# Alternatively you can run the sample module with this function call:
sample_tm_g_pca()
}
}
