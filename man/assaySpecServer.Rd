% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assaySpec.R
\name{assaySpecServer}
\alias{assaySpecServer}
\title{Module Server for Assay Specification}
\usage{
assaySpecServer(id, assays, exclude_assays = character())
}
\arguments{
\item{id}{(\code{string}) the shiny module id.}

\item{assays}{(reactive \code{character})\cr available assays in the currently selected experiment.}

\item{exclude_assays}{(\code{character})\cr
names of the assays which should not be included in choices in the teal module.}
}
\value{
The chosen assay as a reactive string.
}
\description{
This defines the server part for the assay specification.
}
\examples{
ui <- function(id) {
  ns <- NS(id)
  teal.widgets::standard_layout(
    encoding = uiOutput(ns("encoding_ui")),
    output = textOutput(ns("result"))
  )
}

server <- function(id, data, filter_panel_api) {
  moduleServer(id, module = function(input, output, session) {
    output$encoding_ui <- renderUI({
      tags$div(
        experimentSpecInput(session$ns("experiment"), data, "MAE"),
        assaySpecInput(
          session$ns("assay"),
          label_assays = "Please choose assay"
        )
      )
    })
    experiment <- experimentSpecServer(
      id = "experiment",
      data = data,
      filter_panel_api = filter_panel_api,
      mae_name = "MAE"
    )
    assay <- assaySpecServer(
      "assay",
      experiment$assays,
      exclude_assays = c("counts", "cpm", "tpm", "bla")
    )
    output$result <- renderPrint({
      assay()
    })
  })
}

my_app <- function() {
  data <- teal_data(MAE = hermes::multi_assay_experiment)
  app <- init(
    data = data,
    modules = modules(
      module(
        label = "assaySpec example",
        server = server,
        ui = ui,
        datanames = "all"
      )
    )
  )
  shinyApp(app$ui, app$server)
}
if (interactive()) {
  my_app()
}
}
\seealso{
\code{\link[=assaySpecInput]{assaySpecInput()}} for the module UI.
}
