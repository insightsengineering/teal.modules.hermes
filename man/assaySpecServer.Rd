% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assaySpec.R
\name{assaySpecServer}
\alias{assaySpecServer}
\title{Module Server for Assay Specification}
\usage{
assaySpecServer(id, assays, exclude_assays = character())
}
\arguments{
\item{id}{(\code{string}) the shiny module id.}

\item{assays}{(reactive \code{character})\cr available assays in the currently selected experiment.}

\item{exclude_assays}{(\code{character})\cr
names of the assays which should not be included in choices in the teal module.}
}
\value{
The chosen assay as a reactive string.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

This defines the server part for the assay specification.
}
\examples{
ui <- function(id,
               datasets) {
  ns <- NS(id)
  teal.devel::standard_layout(
    encoding = div(
      experimentSpecInput(
        ns("experiment"),
        datasets,
        "MAE"
      ),
      assaySpecInput(
        ns("assay"),
        label_assays = "Please choose assay"
      )
    ),
    output = textOutput(ns("result"))
  )
}

server <- function(id, datasets) {
  moduleServer(id, module = function(input, output, session) {
    experiment <- experimentSpecServer(
      "experiment",
      datasets,
      "MAE"
    )
    assay <- assaySpecServer(
      "assay",
      experiment$assays,
      exclude_assays = c("counts", "cpm", "tpm", "bla")
    )
    output$result <- renderPrint({
      assay()
    })
  })
}

my_app <- function() {
  mae <- hermes::multi_assay_experiment
  mae_name <- "MAE"
  mae_data <- dataset(mae_name, mae)
  data <- teal_data(mae_data)
  app <- init(
    data = data,
    modules = root_modules(
      module(
        label = "assaySpec example",
        server = server,
        ui = ui,
        filters = "all"
      )
    )
  )
  shinyApp(app$ui, app$server)
}
if (interactive()) {
  my_app()
}
}
\seealso{
\code{\link[=assaySpecInput]{assaySpecInput()}} for the module UI.
}
