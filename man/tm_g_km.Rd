% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/km.R
\name{tm_g_km}
\alias{tm_g_km}
\title{Teal Module: Kaplan-Meier}
\usage{
tm_g_km(
  label,
  dataname,
  parentname = ifelse(is(arm_var, "data_extract_spec"),
    teal.devel::datanames_input(arm_var), "ADSL"),
  arm_var,
  arm_ref_comp = NULL,
  paramcd,
  strata_var,
  facet_var,
  time_unit_var = choices_selected(variable_choices(dataname, "AVALU"), "AVALU", fixed
    = TRUE),
  aval_var = choices_selected(variable_choices(dataname, "AVAL"), "AVAL", fixed = TRUE),
  cnsr_var = choices_selected(variable_choices(dataname, "CNSR"), "CNSR", fixed = TRUE),
  conf_level = choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order = TRUE),
  plot_height = c(1200L, 400L, 5000L),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{string})\cr
menu item label of the module in the teal app.}

\item{facet_var}{(\code{\link[teal:choices_selected]{teal::choices_selected()}} or \code{\link[teal:data_extract_spec]{teal::data_extract_spec()}})\cr
object with all available choices and preselected option
for variable names that can be used for facet plotting.}

\item{pre_output}{(\code{shiny.tag} or \code{NULL})\cr
placed before the output to put the output into context (for example a title).}

\item{post_output}{(\code{shiny.tag} or \code{NULL})\cr
placed after the output to put the output into context (for example the \code{\link[shiny:helpText]{shiny::helpText()}}
elements can be useful).}
}
\description{
This teal module produces a grid style Kaplan-Meier plot for data with
ADaM structure.
}
\examples{

library(scda)
library(dplyr)

ADSL <- synthetic_cdisc_data("latest")$adsl
ADTTE <- synthetic_cdisc_data("latest")$adtte

arm_ref_comp = list(
  ACTARMCD = list(
    ref = "ARM B",
    comp = c("ARM A", "ARM C")
  ),
  ARM = list(
    ref = "B: Placebo",
    comp = c("A: Drug X", "C: Combination")
  )
)

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = 'ADSL <- synthetic_cdisc_data("latest")$adsl'),
    cdisc_dataset("ADTTE", ADTTE, code = 'ADTTE <- synthetic_cdisc_data("latest")$adtte'),
    check = TRUE
  ),
  modules = root_modules(
    tm_g_km(
      label = "KM PLOT",
      dataname = "ADTTE",
      arm_var = choices_selected(
        variable_choices(ADSL, c("ARM", "ARMCD", "ACTARMCD")),
        "ARM"
      ),
      paramcd = choices_selected(
        value_choices(ADTTE, "PARAMCD", "PARAM"),
        "OS"
      ),
      arm_ref_comp = arm_ref_comp,
      strata_var = choices_selected(
        variable_choices(ADSL, c("SEX", "BMRKR2")),
        "SEX"
      ),
      facet_var = choices_selected(
        variable_choices(ADSL, c("SEX", "BMRKR2")),
        NULL
      )
    )
  )
)

\dontrun{
shinyApp(ui = app$ui, server = app$server)
}

}
